{"version":3,"sources":["components/Login/login.module.css","components/Profile/profile.module.css","api/api.js","redux/loginReducer.js","redux/profileReducer.js","redux/reduxStore.js","components/Login/Login.jsx","components/Login/LoginContainer.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","App.js","index.js"],"names":["module","exports","LoginAPI","login","password","UPDATE_LOGIN_BODY","UPDATE_PASSWORD_BODY","AUTH","UNLOCK_BUTTON","initiateState","newLoginBody","newPasswordBody","isAuth","buttonDisabled","changeButtonState","state","type","loginReducer","action","SET_LOGIN","reducers","combineReducers","loginPage","profilePage","profileReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Login","props","loginInput","React","createRef","passwordInput","useEffect","turnOnButton","loginInputBody","passwordInputBody","setLogin","to","className","styles","form","ref","placeholder","value","onChange","updateLoginBody","current","updatePasswordBody","disabled","onClick","event","preventDefault","auth","connect","dispatch","Profile","profileLogin","App","path","render","LoginContainer","ProfileContainer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.332a0edd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__f068Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileLogin\":\"profile_profileLogin__2c0kK\"};","export const LoginAPI = {\r\n  login(login, password) {\r\n    return (login === 'developer21' && password === '123456');\r\n  }\r\n}\r\n","import {LoginAPI} from \"../api/api\";\r\n\r\nconst UPDATE_LOGIN_BODY = 'UPDATE_LOGIN_BODY';\r\nconst UPDATE_PASSWORD_BODY = 'UPDATE_PASSWORD_BODY';\r\nconst AUTH = 'AUTH';\r\nconst UNLOCK_BUTTON = 'UNLOCK_BUTTON';\r\n\r\nlet initiateState = {\r\n  newLoginBody: '',\r\n  newPasswordBody: '',\r\n  isAuth: false,\r\n  buttonDisabled: true,\r\n}\r\n\r\nconst loginReducer = (state = initiateState, action) => {\r\n  switch (action.type) {\r\n\r\n    case UPDATE_LOGIN_BODY: {\r\n      return {\r\n        ...state,\r\n        newLoginBody: action.newLoginBody\r\n      }\r\n    }\r\n    case UPDATE_PASSWORD_BODY: {\r\n      return {\r\n        ...state,\r\n        newPasswordBody: action.newPasswordBody\r\n      }\r\n    }\r\n\r\n    case UNLOCK_BUTTON: {\r\n      return {\r\n        ...state,\r\n        buttonDisabled: action.state\r\n      }\r\n    }\r\n\r\n    case AUTH: {\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const turnOnButton = (login, password) => {\r\n  return (dispatch) => {\r\n    dispatch(changeButtonState(!LoginAPI.login(login, password)))\r\n  }\r\n}\r\n\r\nexport const changeButtonState = (state) => {\r\n  return ({\r\n    type: UNLOCK_BUTTON,\r\n    state\r\n  })\r\n}\r\n\r\nexport const auth = () => {\r\n  return ({\r\n    type: AUTH\r\n  })\r\n}\r\n\r\nexport const updateLoginBody = (newLoginBody) => {\r\n  return ({\r\n    type: UPDATE_LOGIN_BODY,\r\n    newLoginBody\r\n  })\r\n}\r\n\r\nexport const updatePasswordBody = (newPasswordBody) => {\r\n  return ({\r\n    type: UPDATE_PASSWORD_BODY,\r\n    newPasswordBody\r\n  })\r\n}\r\nexport default loginReducer;","const SET_LOGIN = 'SET_LOGIN';\r\n\r\nlet initiateState = {\r\n  login: null\r\n}\r\n\r\nconst loginReducer = (state = initiateState, action) => {\r\n  switch (action.type) {\r\n\r\n    case SET_LOGIN: {\r\n      return {\r\n        ...state,\r\n        login: action.login\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setLogin = (login) => {\r\n  return ({\r\n    type: SET_LOGIN,\r\n    login\r\n  })\r\n}\r\n\r\nexport default loginReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport loginReducer from \"./loginReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  loginPage: loginReducer,\r\n  profilePage: profileReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport styles from './login.module.css';\r\nimport {turnOnButton} from \"../../redux/loginReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const loginInput = React.createRef();\r\n  const passwordInput = React.createRef();\r\n\r\n  const loginInputChange = () => {\r\n    props.updateLoginBody(loginInput.current.value)\r\n  }\r\n\r\n  const passwordInputChange = () => {\r\n    props.updatePasswordBody(passwordInput.current.value)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    props.turnOnButton(props.loginInputBody, props.passwordInputBody);\r\n  }, [props.loginInputBody, props.passwordInputBody])\r\n\r\n  if (props.isAuth) {\r\n    props.setLogin(props.loginInputBody);\r\n    return <Redirect to='/profile' />;\r\n  }\r\n\r\n  return (\r\n    <form className={styles.form}>\r\n      <input ref={loginInput} type=\"text\" placeholder='Введите логин' value={props.loginInputBody} onChange={loginInputChange} />\r\n      <input ref={passwordInput} type=\"password\" placeholder='Введите пароль' value={props.passwordInputBody}\r\n             onChange={passwordInputChange} />\r\n      <button disabled={props.buttonDisabled} onClick={(event) => {\r\n        event.preventDefault();\r\n        props.auth();\r\n      }}>\r\n        Войти\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {auth, turnOnButton, updateLoginBody, updatePasswordBody} from \"../../redux/loginReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {setLogin} from \"../../redux/profileReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginInputBody: state.loginPage.newLoginBody,\r\n    passwordInputBody: state.loginPage.newPasswordBody,\r\n    isAuth: state.loginPage.isAuth,\r\n    buttonDisabled: state.loginPage.buttonDisabled\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateLoginBody, updatePasswordBody, auth, turnOnButton, setLogin\r\n})(Login);","import React from \"react\";\r\nimport styles from './profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <h1 className={styles.profileLogin}>\r\n      {props.login}\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.profilePage.login,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n})(Profile);","import './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <Route path='/' render={()=> <LoginContainer />}/>\n      <Route path='/profile' render={()=> <ProfileContainer />}/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import store from \"./redux/reduxStore\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n"],"sourceRoot":""}